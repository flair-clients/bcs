{"version":3,"file":"SearchProduct-legacy-COiXq0zB.js","sources":["../../src/pages/ShoppingListDetails/components/SearchProduct.tsx","../../src/pages/ShoppingListDetails/context/ShoppingListDetailsContext.tsx","../../../../node_modules/@mui/icons-material/UploadFile.js","../../src/pages/ShoppingListDetails/components/ChooseOptionsDialog.tsx","../../src/pages/ShoppingListDetails/components/ProductListDialog.tsx"],"sourcesContent":["import { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { searchB2BProducts, searchBcProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { calculateProductListPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListProductItem } from '../../../types';\n\nimport ChooseOptionsDialog from './ChooseOptionsDialog';\nimport ProductListDialog from './ProductListDialog';\n\ninterface SearchProductProps {\n  updateList?: () => void;\n  addToList: (products: CustomFieldItems[]) => void;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  isB2BUser: boolean;\n  type?: string;\n}\n\nexport default function SearchProduct({\n  updateList = () => {},\n  addToList,\n  searchDialogTitle,\n  addButtonText,\n  isB2BUser,\n  type,\n}: SearchProductProps) {\n  const b3Lang = useB3Lang();\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const companyId = companyInfoId || salesRepCompanyId;\n  const [isLoading, setIsLoading] = useState(false);\n  const [productListOpen, setProductListOpen] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [productList, setProductList] = useState<ShoppingListProductItem[]>([]);\n  const [chooseOptionsOpen, setChooseOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<ShoppingListProductItem>();\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleSearchTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const searchProduct = async () => {\n    if (!searchText || isLoading) {\n      return;\n    }\n\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('global.searchProductAddProduct.businessAccountPendingApproval'));\n      return;\n    }\n    const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n    setIsLoading(true);\n    try {\n      const { productsSearch } = await getProducts({\n        search: searchText,\n        companyId,\n        customerGroupId,\n        categoryFilter: true,\n      });\n\n      const product = conversionProductsList(productsSearch);\n\n      setProductList(product);\n      setProductListOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchTextKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchProduct();\n    }\n  };\n\n  const handleSearchButtonClicked = () => {\n    searchProduct();\n  };\n\n  const clearProductInfo = () => {\n    setProductList([]);\n  };\n\n  const handleProductListDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(false);\n\n    if (isAdded) {\n      setIsAdded(false);\n      updateList();\n    }\n\n    clearProductInfo();\n  };\n\n  const handleProductQuantityChange = (id: number, newQuantity: number) => {\n    const product = productList.find((product) => product.id === id);\n    if (product) {\n      product.quantity = newQuantity;\n    }\n\n    setProductList([...productList]);\n  };\n\n  const handleAddToListClick = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await addToList(products);\n\n      updateList();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleProductListAddToList = async (products: CustomFieldItems[]) => {\n    await handleAddToListClick(products);\n  };\n\n  const handleChangeOptionsClick = (productId: number) => {\n    const product = productList.find((product) => product.id === productId);\n    if (product) {\n      setOptionsProduct({\n        ...product,\n      });\n    }\n    setProductListOpen(false);\n    setChooseOptionsOpen(true);\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(true);\n  };\n\n  const handleChooseOptionsDialogConfirm = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await handleAddToListClick(products);\n      setChooseOptionsOpen(false);\n      setProductListOpen(true);\n    } catch (error) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: '24px 0',\n      }}\n    >\n      <Typography>{b3Lang('global.searchProductAddProduct.searchBySkuOrName')}</Typography>\n      <TextField\n        hiddenLabel\n        placeholder={b3Lang(`global.searchProduct.placeholder.${type}`)}\n        variant=\"filled\"\n        fullWidth\n        size=\"small\"\n        value={searchText}\n        onChange={handleSearchTextChange}\n        onKeyDown={handleSearchTextKeyDown}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          margin: '12px 0',\n          '& input': {\n            padding: '12px 12px 12px 0',\n          },\n        }}\n      />\n      <CustomButton\n        variant=\"outlined\"\n        fullWidth\n        disabled={isLoading}\n        onClick={handleSearchButtonClicked}\n      >\n        <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n          <Box\n            sx={{\n              flex: 1,\n              textAlign: 'center',\n            }}\n          >\n            {b3Lang('global.searchProductAddProduct.searchProduct')}\n          </Box>\n        </B3Spin>\n      </CustomButton>\n\n      <ProductListDialog\n        isOpen={productListOpen}\n        isLoading={isLoading}\n        productList={productList}\n        searchText={searchText}\n        type={type}\n        onSearchTextChange={handleSearchTextChange}\n        onSearch={handleSearchButtonClicked}\n        onCancel={handleProductListDialogCancel}\n        onProductQuantityChange={handleProductQuantityChange}\n        onChooseOptionsClick={handleChangeOptionsClick}\n        onAddToListClick={handleProductListAddToList}\n        searchDialogTitle={searchDialogTitle}\n        addButtonText={addButtonText}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isLoading}\n        type={type}\n        setIsLoading={setIsLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={handleChooseOptionsDialogConfirm}\n        addButtonText={addButtonText}\n        isB2BUser={isB2BUser}\n      />\n    </Box>\n  );\n}\n","import { createContext, Dispatch, ReactNode, useMemo, useReducer } from 'react';\n\nexport interface ShoppingListDetailsState {\n  id?: number;\n  isLoading?: boolean;\n}\ninterface ShoppingListDetailsAction {\n  type: string;\n  payload: ShoppingListDetailsState;\n}\nexport interface ShoppingListDetailsContextType {\n  state: ShoppingListDetailsState;\n  dispatch: Dispatch<ShoppingListDetailsAction>;\n}\n\ninterface ShoppingListDetailsProviderProps {\n  children: ReactNode;\n}\n\nconst initState = {\n  id: 0,\n  isLoading: false,\n};\n\nexport const ShoppingListDetailsContext = createContext<ShoppingListDetailsContextType>({\n  state: initState,\n  dispatch: () => {},\n});\n\nconst reducer = (state: ShoppingListDetailsState, action: ShoppingListDetailsAction) => {\n  switch (action.type) {\n    case 'all':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case 'init':\n      return {\n        ...state,\n        id: action.payload.id,\n      };\n    case 'loading':\n      return {\n        ...state,\n        isLoading: action.payload.isLoading,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function ShoppingListDetailsProvider(props: ShoppingListDetailsProviderProps) {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const { children } = props;\n\n  const ShoppingListDetailsValue = useMemo(\n    () => ({\n      state,\n      dispatch,\n    }),\n    [state],\n  );\n\n  return (\n    <ShoppingListDetailsContext.Provider value={ShoppingListDetailsValue}>\n      {children}\n    </ShoppingListDetailsContext.Provider>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm4 18H6V4h7v5h5zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11z\"\n}), 'UploadFile');","import {\n  ChangeEvent,\n  Dispatch,\n  KeyboardEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport styled from '@emotion/styled';\nimport { Box, Divider, TextField, Typography } from '@mui/material';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { searchB2BProducts, searchBcProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { currencyFormat, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  calculateProductListPrice,\n  getBCPrice,\n  getProductInfoDisplayPrice,\n  getVariantInfoDisplayPrice,\n} from '@/utils/b3Product/b3Product';\n\nimport { AllOptionProps, ShoppingListProductItem, SimpleObject, Variant } from '../../../types';\nimport {\n  Base64,\n  getOptionRequestData,\n  getProductOptionsFields,\n} from '../../../utils/b3Product/shared/config';\n\nconst Flex = styled('div')({\n  display: 'flex',\n  wordBreak: 'break-word',\n  gap: '8px',\n  flexWrap: 'wrap',\n  padding: '12px 0 12px',\n  '&:first-of-type': {\n    marginTop: '12px',\n  },\n});\n\ninterface FlexItemProps {\n  padding?: string;\n}\n\nconst FlexItem = styled('div')(({ padding }: FlexItemProps) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexShrink: 1,\n  alignItems: 'flex-start',\n  width: '100%',\n  padding: padding || '0 0 0 16px',\n}));\n\nconst ProductImage = styled('img')(() => ({\n  width: '60px',\n  height: '60px',\n  borderRadius: '4px',\n  marginTop: '12px',\n  flexShrink: 0,\n}));\n\nconst ProductOptionText = styled('div')(() => ({\n  fontSize: '0.75rem',\n  lineHeight: '1.5',\n  color: '#455A64',\n}));\n\nconst StyleTextField = styled(TextField)(() => ({\n  '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n    marginTop: '-8px',\n    marginBottom: '8px',\n  },\n}));\n\ninterface ChooseOptionsDialogProps {\n  isOpen: boolean;\n  product?: ShoppingListProductItem;\n  onCancel: () => void;\n  onConfirm: (products: CustomFieldItems[]) => void;\n  isEdit?: boolean;\n  isLoading: boolean;\n  setIsLoading: Dispatch<SetStateAction<boolean>>;\n  addButtonText?: string;\n  isB2BUser: boolean;\n  type?: string;\n}\n\ninterface ChooseOptionsProductProps extends ShoppingListProductItem {\n  newSelectOptionList: {\n    optionId: string;\n    optionValue: any;\n  }[];\n  productId: number;\n  quantity: number;\n  variantId: number;\n  additionalProducts: CustomFieldItems;\n}\n\nexport default function ChooseOptionsDialog(props: ChooseOptionsDialogProps) {\n  const {\n    isOpen,\n    onCancel,\n    onConfirm,\n    product,\n    isEdit = false,\n    isLoading,\n    setIsLoading,\n    isB2BUser,\n    type,\n    ...restProps\n  } = props;\n\n  const b3Lang = useB3Lang();\n  const { addButtonText = b3Lang('shoppingList.chooseOptionsDialog.addToList') } = restProps;\n\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const [quantity, setQuantity] = useState<number | string>(1);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [variantInfo, setVariantInfo] = useState<Partial<Variant> | null>(null);\n  const [variantSku, setVariantSku] = useState('');\n  const [currentImage, setCurrentImage] = useState<string>(product?.imageUrl || '');\n  const [isShowPrice, setShowPrice] = useState<boolean>(true);\n  const [additionalProducts, setAdditionalProducts] = useState<CustomFieldItems>({});\n  const [productPriceChangeOptions, setProductPriceChangeOptions] = useState<\n    Partial<AllOptionProps>[]\n  >([]);\n  const [newPrice, setNewPrice] = useState<number>(0);\n  const [chooseOptionsProduct, setChooseOptionsProduct] = useState<ChooseOptionsProductProps[]>([]);\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === 'quote' && product) {\n      if (variantSku) {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getVariantInfoDisplayPrice(newProduct.base_price, newProduct, {\n          sku: variantSku,\n        });\n        setShowPrice(isPrice);\n      } else {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getProductInfoDisplayPrice(newProduct.base_price, newProduct);\n        if (!isPrice) {\n          setShowPrice(false);\n        }\n      }\n    } else if ((type === 'shoppingList' || type === 'quickOrder') && product) {\n      setShowPrice(!product?.isPriceHidden);\n    }\n  }, [variantSku, quantity, product, type]);\n\n  const setChooseOptionsForm = async (product: ShoppingListProductItem) => {\n    try {\n      setIsLoading(true);\n\n      const modifiers =\n        product?.modifiers?.filter(\n          (modifier) =>\n            modifier.type === 'product_list_with_images' || modifier.type === 'product_list',\n        ) || [];\n      const productImages: SimpleObject = {};\n      const additionalProductsParams: CustomFieldItems = {};\n      if (modifiers.length > 0) {\n        const productIds = modifiers.reduce((arr: number[], modifier) => {\n          const { option_values: optionValues } = modifier;\n          optionValues.forEach((option) => {\n            if (option?.value_data?.product_id) {\n              arr.push(option.value_data.product_id);\n            }\n          });\n          return arr;\n        }, []);\n\n        if (productIds.length > 0) {\n          const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n          const companyId = companyInfoId || salesRepCompanyId;\n          const { productsSearch } = await getProducts({\n            productIds,\n            companyId,\n            customerGroupId,\n          });\n\n          productsSearch.forEach((product: CustomFieldItems) => {\n            productImages[product.id] = product.imageUrl;\n            additionalProductsParams[product.id] = product;\n          });\n        }\n      }\n\n      setAdditionalProducts(additionalProductsParams);\n\n      setQuantity(product.quantity);\n      if (product.variants?.length === 1 && product.variants[0]) {\n        setVariantInfo(product.variants[0]);\n      }\n\n      const productOptionsFields = getProductOptionsFields(product, productImages);\n      setFormFields([...productOptionsFields]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getProductPriceOptions = (product: ShoppingListProductItem) => {\n    const newProductPriceChangeOptionLists: Partial<AllOptionProps>[] = [];\n    product.allOptions?.forEach((item) => {\n      if (\n        item.type === 'product_list_with_images' ||\n        item.type === 'product_list' ||\n        item.type === 'checkbox' ||\n        item.type === 'rectangles' ||\n        item.type === 'swatch' ||\n        item.type === 'radio_buttons' ||\n        item.type === 'dropdown'\n      ) {\n        newProductPriceChangeOptionLists.push(item);\n      }\n    });\n\n    setProductPriceChangeOptions(newProductPriceChangeOptionLists);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setChooseOptionsForm(product);\n      setChooseOptionsProduct([]);\n      setNewPrice(0);\n      if (product?.allOptions?.length) {\n        getProductPriceOptions(product);\n      }\n    } else {\n      setQuantity(1);\n      setFormFields([]);\n    }\n    // disabling as we don't need dispatchers here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [product]);\n\n  const getProductPrice = (product: ShoppingListProductItem) => {\n    const { variants = [] } = product;\n\n    let priceNumber = 0;\n    if (variantSku) {\n      const variantCalculatePrice = variants.find(\n        (variant) => variant.sku === variantSku,\n      )?.bc_calculated_price;\n      priceNumber =\n        (showInclusiveTaxPrice\n          ? variantCalculatePrice?.tax_inclusive\n          : variantCalculatePrice?.tax_exclusive) || 0;\n    } else {\n      const variantCalculatePrice = variants[0]?.bc_calculated_price;\n      priceNumber =\n        parseFloat(\n          (showInclusiveTaxPrice\n            ? variantCalculatePrice?.tax_inclusive\n            : variantCalculatePrice?.tax_exclusive\n          )?.toString(),\n        ) || 0;\n    }\n\n    return priceNumber;\n  };\n\n  const handleProductQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value || parseInt(e.target.value, 10) > 0) {\n      setQuantity(e.target.value);\n    }\n  };\n\n  const handleNumberInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (['KeyE', 'Equal', 'Minus'].indexOf(event.code) > -1) {\n      event.preventDefault();\n    }\n  };\n\n  const handleNumberInputBlur = () => {\n    if (!quantity) {\n      setQuantity(1);\n    }\n\n    if (Number(quantity) > 1000000) {\n      setQuantity(1000000);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const formValues = watch();\n  const cache = useRef(formValues);\n\n  const getProductVariantId = useCallback(\n    async (value: CustomFieldItems, changeName = '') => {\n      const isVariantOptionChange =\n        formFields.find((item: CustomFieldItems) => item.name === changeName)?.isVariantOption ||\n        false;\n\n      if (!isVariantOptionChange || !product || !changeName) {\n        return;\n      }\n\n      const { variants = [] } = product || {};\n\n      const variantInfo =\n        variants.find((variant) => {\n          const { option_values: optionValues = [] } = variant;\n\n          const isSelectVariant = optionValues.reduce((isSelect, option) => {\n            if (\n              value[Base64.encode(`attribute[${option.option_id}]`)].toString() !==\n              (option.id || '').toString()\n            ) {\n              return false;\n            }\n            return isSelect;\n          }, true);\n\n          return isSelectVariant;\n        }) || null;\n\n      setVariantSku(variantInfo ? variantInfo.sku : '');\n      setVariantInfo(variantInfo);\n\n      if (variantInfo && (variantInfo.sku || variantInfo.variant_id)) {\n        const currentVariant = variants.find(\n          (variant) =>\n            variant.sku === variantInfo.sku || variant.variant_id === variantInfo.variant_id,\n        );\n\n        setCurrentImage(currentVariant?.image_url || product.imageUrl || '');\n      }\n    },\n    [formFields, product],\n  );\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      getProductVariantId(value, name);\n    });\n\n    if (formFields[0]) {\n      const defaultValues: SimpleObject = formFields.reduce((value: SimpleObject, fields) => {\n        const formFieldValue = value;\n        formFieldValue[fields.name] = fields.default;\n        setValue(fields.name, fields.default);\n        return value;\n      }, {});\n      getProductVariantId(defaultValues, formFields[0].name);\n    }\n\n    return () => subscription.unsubscribe();\n    // disabling as we don't need dispatchers or subscribers in the dep array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formFields, getProductVariantId]);\n\n  const validateQuantityNumber = useCallback(() => {\n    const { purchasing_disabled: purchasingDisabled = true } = variantInfo || {};\n\n    if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n      snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n      return false;\n    }\n\n    return true;\n    // disabling as b3Lang will render errors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableProduct, type, variantInfo]);\n\n  const getOptionList = useCallback(\n    (value: FieldValues) => {\n      const optionsData = getOptionRequestData(formFields, {}, value);\n      return Object.keys(optionsData).map((optionId) => ({\n        optionId,\n        optionValue: optionsData[optionId]?.toString(),\n      }));\n    },\n    [formFields],\n  );\n\n  useEffect(() => {\n    if (cache?.current && isEqual(cache?.current, formValues)) {\n      return;\n    }\n\n    cache.current = formValues;\n    if (Object.keys(formValues).length && formFields.length && productPriceChangeOptions.length) {\n      const optionList = getOptionList(formValues);\n      const { variant_id: variantId = '' } = variantInfo || {};\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      const newChooseOptionsProduct = [\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ];\n\n      if (chooseOptionsProduct[0]) {\n        let optionChangeFlag = false;\n        const { newSelectOptionList } = chooseOptionsProduct[0];\n        newSelectOptionList.forEach((option) => {\n          const findAttributeId = productPriceChangeOptions.findIndex((item) =>\n            option.optionId.includes(String(item.id)),\n          );\n          optionList.forEach((newOption) => {\n            if (\n              option.optionId === newOption.optionId &&\n              option.optionValue !== newOption.optionValue &&\n              findAttributeId !== -1\n            ) {\n              optionChangeFlag = true;\n            }\n          });\n        });\n        if (optionChangeFlag) {\n          setChooseOptionsProduct(newChooseOptionsProduct);\n        }\n      } else {\n        setChooseOptionsProduct(newChooseOptionsProduct);\n      }\n    }\n  }, [\n    additionalProducts,\n    chooseOptionsProduct,\n    formFields.length,\n    formValues,\n    getOptionList,\n    product,\n    productPriceChangeOptions,\n    quantity,\n    validateQuantityNumber,\n    variantInfo,\n  ]);\n\n  useEffect(() => {\n    const getNewProductPrice = async () => {\n      try {\n        if (chooseOptionsProduct.length) {\n          setIsRequestLoading(true);\n          const products = await calculateProductListPrice(chooseOptionsProduct);\n\n          if (products[0]) {\n            const { basePrice, taxPrice } = products[0];\n            const price = getBCPrice(Number(basePrice), Number(taxPrice));\n            setNewPrice(price);\n          }\n        }\n      } catch (err) {\n        b2bLogger.error(err);\n      } finally {\n        setIsRequestLoading(false);\n      }\n    };\n\n    getNewProductPrice();\n  }, [chooseOptionsProduct]);\n\n  const handleConfirmClicked = () => {\n    handleSubmit((value) => {\n      const optionList = getOptionList(value);\n\n      const { variant_id: variantId = '' } = variantInfo || {};\n\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      onConfirm([\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ]);\n    })();\n  };\n\n  const handleCancelClicked = () => {\n    setQuantity(1);\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n    // disabling as reset does not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <B3Dialog\n      isOpen={isOpen}\n      rightSizeBtn={isEdit ? b3Lang('shoppingList.chooseOptionsDialog.saveOption') : addButtonText}\n      handleLeftClick={handleCancelClicked}\n      handRightClick={handleConfirmClicked}\n      title={b3Lang('shoppingList.chooseOptionsDialog.chooseOptions')}\n      loading={isLoading || isRequestLoading}\n    >\n      <B3Spin isSpinning={isLoading}>\n        {product && (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <ProductImage src={currentImage || product.imageUrl || PRODUCT_DEFAULT_IMAGE} />\n                <Flex>\n                  <FlexItem padding=\"0\">\n                    <Box\n                      sx={{\n                        marginLeft: '16px',\n                      }}\n                    >\n                      <Typography variant=\"body1\" color=\"#212121\">\n                        {product.name}\n                      </Typography>\n                      <Typography variant=\"body1\" color=\"#616161\">\n                        {variantSku || product.sku}\n                      </Typography>\n                      {(product.product_options || []).map((option) => (\n                        <ProductOptionText\n                          key={`${option.option_id}`}\n                        >{`${option.display_name}: ${option.display_value}`}</ProductOptionText>\n                      ))}\n                    </Box>\n                  </FlexItem>\n\n                  <FlexItem>\n                    <span>{b3Lang('shoppingList.chooseOptionsDialog.price')}</span>\n                    {!isShowPrice\n                      ? ''\n                      : currencyFormat(newPrice * Number(quantity) || getProductPrice(product))}\n                  </FlexItem>\n\n                  <FlexItem>\n                    <StyleTextField\n                      type=\"number\"\n                      variant=\"filled\"\n                      label={b3Lang('shoppingList.chooseOptionsDialog.quantity')}\n                      value={quantity}\n                      onChange={handleProductQuantityChange}\n                      onKeyDown={handleNumberInputKeyDown}\n                      onBlur={handleNumberInputBlur}\n                      size=\"small\"\n                      sx={{\n                        width: '60%',\n                        maxWidth: '100px',\n                      }}\n                    />\n                  </FlexItem>\n                </Flex>\n              </Box>\n\n              <Divider\n                sx={{\n                  margin: '16px 0 24px',\n                }}\n              />\n\n              <B3CustomForm\n                formFields={formFields}\n                errors={errors}\n                control={control}\n                getValues={getValues}\n                setValue={setValue}\n              />\n            </Box>\n          </Box>\n        )}\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useCallback, useContext } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport { B3ProductList } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\n\nimport { ShoppingListProductItem } from '../../../types';\nimport { ShoppingListDetailsContext } from '../context/ShoppingListDetailsContext';\n\ninterface ProductTableActionProps {\n  product: ShoppingListProductItem;\n  onAddToListClick: (id: number) => void;\n  onChooseOptionsClick: (id: number) => void;\n  addButtonText: string;\n}\n\nfunction ProductTableAction(props: ProductTableActionProps) {\n  const {\n    product: { id, allOptions: productOptions },\n    onAddToListClick,\n    onChooseOptionsClick,\n    addButtonText,\n  } = props;\n\n  const {\n    state: { isLoading = false },\n  } = useContext(ShoppingListDetailsContext);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  return productOptions && productOptions.length > 0 ? (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onChooseOptionsClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {b3Lang('global.searchProduct.chooseOptionsButton')}\n    </CustomButton>\n  ) : (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onAddToListClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {addButtonText}\n    </CustomButton>\n  );\n}\n\ninterface ProductListDialogProps {\n  isOpen: boolean;\n  searchText: string;\n  productList: ShoppingListProductItem[];\n  onCancel: () => void;\n  onSearchTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n  onProductQuantityChange: (id: number, newQuantity: number) => void;\n  onAddToListClick: (products: CustomFieldItems[]) => void;\n  onChooseOptionsClick: (id: number) => void;\n  isLoading: boolean;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  type?: string;\n}\n\nconst ProductTable = B3ProductList<ShoppingListProductItem>;\n\nexport default function ProductListDialog(props: ProductListDialogProps) {\n  const b3Lang = useB3Lang();\n  const {\n    isOpen,\n    onCancel,\n    searchText,\n    productList,\n    onSearchTextChange,\n    onSearch,\n    onProductQuantityChange,\n    onAddToListClick,\n    onChooseOptionsClick,\n    isLoading,\n    type,\n    searchDialogTitle = b3Lang('shoppingLists.title'),\n    addButtonText = b3Lang('shoppingLists.addButtonText'),\n  } = props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const [isMobile] = useMobile();\n\n  const handleCancelClicked = () => {\n    onCancel();\n  };\n\n  const handleSearchKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  const validateQuantityNumber = useCallback(\n    (product: ShoppingListProductItem) => {\n      const { variants = [] } = product || {};\n      const { purchasing_disabled: purchasingDisabled = true } = variants[0] || {};\n\n      if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n        snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n        return false;\n      }\n\n      return true;\n    },\n    // ignore b3Lang it's not reactive\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isEnableProduct, type],\n  );\n\n  const handleAddToList = (id: number) => {\n    const product = productList.find((product) => product.id === id);\n\n    if (product && validateQuantityNumber(product || {})) {\n      let variantId: number | string = product.variantId || 0;\n\n      if (!product.variantId && product.variants?.[0]) {\n        variantId = product.variants[0].variant_id;\n      }\n\n      onAddToListClick([\n        {\n          ...product,\n          newSelectOptionList: [],\n          quantity: parseInt(product.quantity.toString(), 10) || 1,\n          variantId,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={searchDialogTitle}\n      showRightBtn={false}\n      loading={isLoading}\n      maxWidth=\"md\"\n      leftSizeBtn={b3Lang('shoppingLists.close')}\n    >\n      <B3Spin isSpinning={isLoading}>\n        <Box\n          sx={{\n            minWidth: isMobile ? 'initial' : '100%',\n            flex: 1,\n          }}\n        >\n          <TextField\n            hiddenLabel\n            variant=\"filled\"\n            fullWidth\n            size=\"small\"\n            value={searchText}\n            onChange={onSearchTextChange}\n            onKeyDown={handleSearchKeyDown}\n            error={!productList || productList.length <= 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              margin: '12px 0',\n              '& input': {\n                padding: '12px 12px 12px 0',\n              },\n            }}\n          />\n\n          {productList && productList.length > 0 ? (\n            <ProductTable\n              products={productList}\n              quantityEditable\n              type={type}\n              textAlign={isMobile ? 'left' : 'right'}\n              canToProduct\n              onProductQuantityChange={onProductQuantityChange}\n              renderAction={(product) => (\n                <ProductTableAction\n                  product={product}\n                  onAddToListClick={handleAddToList}\n                  onChooseOptionsClick={onChooseOptionsClick}\n                  addButtonText={addButtonText}\n                />\n              )}\n              actionWidth=\"180px\"\n            />\n          ) : (\n            <Typography>No products found</Typography>\n          )}\n        </Box>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n"],"names":["updateList","addToList","searchDialogTitle","addButtonText","isB2BUser","type","b3Lang","useB3Lang","companyInfoId","useAppSelector","company","companyInfo","id","customerGroupId","state","customer","companyStatus","status","salesRepCompanyId","b2bFeatures","masqueradeCompany","companyId","isLoading","setIsLoading","useState","productListOpen","setProductListOpen","isAdded","setIsAdded","searchText","setSearchText","productList","setProductList","chooseOptionsOpen","setChooseOptionsOpen","optionsProduct","setOptionsProduct","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","handleSearchTextChange","e","target","value","searchProduct","async","snackbar","info","getProducts","searchB2BProducts","searchBcProducts","productsSearch","search","categoryFilter","product","conversionProductsList","handleSearchButtonClicked","handleAddToListClick","calculateProductListPrice","products","jsxs","Box","sx","margin","children","jsx","Typography","TextField","hiddenLabel","placeholder","variant","fullWidth","size","onChange","onKeyDown","key","InputProps","startAdornment","InputAdornment","position","SearchIcon","padding","CustomButton","disabled","onClick","B3Spin","isSpinning","tip","flex","textAlign","ProductListDialog","isOpen","onSearchTextChange","onSearch","onCancel","handleProductListDialogCancel","onProductQuantityChange","handleProductQuantityChange","newQuantity","find","quantity","onChooseOptionsClick","productId","onAddToListClick","ChooseOptionsDialog","handleChooseOptionsDialogCancel","onConfirm","error","props","dispatch","useReducer","reducer","initState","ShoppingListDetailsValue","useMemo","ShoppingListDetailsContext","Provider","_interopRequireDefault","require$$0","Object","defineProperty","UploadFile","exports","default","_createSvgIcon","require$$1","_jsxRuntime","require$$2","d","Flex","styled","display","wordBreak","gap","flexWrap","marginTop","FlexItem","flexGrow","flexShrink","alignItems","width","ProductImage","height","borderRadius","ProductOptionText","fontSize","lineHeight","color","StyleTextField","marginBottom","isEdit","restProps","showInclusiveTaxPrice","global","isEnableProduct","blockPendingQuoteNonPurchasableOOS","setQuantity","formFields","setFormFields","variantInfo","setVariantInfo","variantSku","setVariantSku","currentImage","setCurrentImage","imageUrl","isShowPrice","setShowPrice","additionalProducts","setAdditionalProducts","productPriceChangeOptions","setProductPriceChangeOptions","newPrice","setNewPrice","chooseOptionsProduct","setChooseOptionsProduct","isRequestLoading","setIsRequestLoading","useEffect","newProduct","isPrice","getVariantInfoDisplayPrice","base_price","sku","getProductInfoDisplayPrice","isPriceHidden","modifiers","filter","modifier","productImages","additionalProductsParams","length","productIds","reduce","arr","option_values","optionValues","forEach","option","value_data","product_id","push","variants","productOptionsFields","getProductOptionsFields","setChooseOptionsForm","allOptions","newProductPriceChangeOptionLists","item","getProductPriceOptions","control","handleSubmit","getValues","formState","errors","watch","setValue","reset","useForm","mode","formValues","cache","useRef","getProductVariantId","useCallback","changeName","name","isVariantOption","isSelect","Base64","encode","option_id","toString","variant_id","currentVariant","image_url","subscription","defaultValues","fields","unsubscribe","validateQuantityNumber","purchasing_disabled","purchasingDisabled","getOptionList","optionsData","getOptionRequestData","keys","map","optionId","optionValue","current","isEqual","optionList","variantId","newChooseOptionsProduct","newSelectOptionList","parseInt","optionChangeFlag","findAttributeId","findIndex","includes","String","newOption","basePrice","taxPrice","price","getBCPrice","Number","err","b2bLogger","getNewProductPrice","B3Dialog","rightSizeBtn","handleLeftClick","handleCancelClicked","handRightClick","handleConfirmClicked","title","loading","flexDirection","src","PRODUCT_DEFAULT_IMAGE","marginLeft","product_options","display_name","display_value","currencyFormat","priceNumber","variantCalculatePrice","bc_calculated_price","tax_inclusive","tax_exclusive","parseFloat","getProductPrice","label","event","indexOf","code","preventDefault","onBlur","handleNumberInputBlur","maxWidth","Divider","B3CustomForm","createContext","action","payload","ProductTableAction","productOptions","useContext","isMobile","useMobile","ProductTable","B3ProductList","handleAddToList","showRightBtn","leftSizeBtn","minWidth","quantityEditable","canToProduct","renderAction","actionWidth"],"mappings":"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","x_google_ignoreList":[2]}